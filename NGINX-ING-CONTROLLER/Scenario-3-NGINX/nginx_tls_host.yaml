apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-cm
data:
  nginx.conf: |
    user nginx;
    worker_processes  1;
    error_log  /var/log/nginx/error.log;
    events {
      worker_connections  1024;
    }
    http {
      log_format  main
              'remote_addr:$remote_addr\t'
              'time_local:$time_local\t'
              'method:$request_method\t'
              'uri:$request_uri\t'
              'host:$host\t'
              'status:$status\t'
              'bytes_sent:$body_bytes_sent\t'
              'referer:$http_referer\t'
              'useragent:$http_user_agent\t'
              'forwardedfor:$http_x_forwarded_for\t'
              'request_time:$request_time';
      access_log	/var/log/nginx/access.log main;
      server {
          listen       80 default;
          server_name nginx.portal.azure.com;
          location / {
              root   /usr/share/nginx/html;
              index  index.html index.htm;
        }
      }
    }

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
        volumeMounts:
          - mountPath: /etc/nginx
            name: configmap-volume
      volumes:
      - name: configmap-volume
        configMap:
          name: nginx-cm
          
---

apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  selector:
    app: nginx
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80

---

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: fsia-frontend
spec:
  tls:
    - hosts:
      - fsia-frontend.portal.azure.com
      secretName: nginx-tls-host
  rules:
    - host: fsia-frontend.portal.azure.com
      http:
        paths:
        - path: /
          backend:
            serviceName: nginx
            servicePort: 80



